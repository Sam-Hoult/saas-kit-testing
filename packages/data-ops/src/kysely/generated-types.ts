/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AuthAccount {
  access_token: string | null;
  access_token_expires_at: Timestamp | null;
  account_id: string;
  created_at: Generated<Timestamp>;
  id: string;
  id_token: string | null;
  password: string | null;
  provider_id: string;
  refresh_token: string | null;
  refresh_token_expires_at: Timestamp | null;
  scope: string | null;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface AuthSession {
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: string;
  ip_address: string | null;
  token: string;
  updated_at: Generated<Timestamp>;
  user_agent: string | null;
  user_id: string;
}

export interface AuthUser {
  created_at: Generated<Timestamp>;
  email: string;
  email_verified: Generated<boolean>;
  id: string;
  image: string | null;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface AuthVerification {
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: string;
  identifier: string;
  updated_at: Generated<Timestamp>;
  value: string;
}

export interface DrizzleDrizzleMigrations {
  created_at: Int8 | null;
  hash: string;
  id: Generated<number>;
}

export interface DB {
  auth_account: AuthAccount;
  auth_session: AuthSession;
  auth_user: AuthUser;
  auth_verification: AuthVerification;
  "drizzle.__drizzle_migrations": DrizzleDrizzleMigrations;
}
