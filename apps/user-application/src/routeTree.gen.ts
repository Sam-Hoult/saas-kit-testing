/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as StaticRouteRouteImport } from './routes/_static/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ApiTestRouteImport } from './routes/api/test'
import { Route as StaticDocsIndexRouteImport } from './routes/_static/docs/index'
import { Route as AuthAppIndexRouteImport } from './routes/_auth/app/index'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth.$'
import { Route as StaticDocsNameRouteImport } from './routes/_static/docs/$name'
import { Route as AuthAppSpecialRouteImport } from './routes/_auth/app/special'
import { Route as AuthAppDashboard_oldRouteImport } from './routes/_auth/app/dashboard_old'
import { Route as AuthAppDashboardRouteRouteImport } from './routes/_auth/app/dashboard/route'
import { Route as AuthAppDashboardIndexRouteImport } from './routes/_auth/app/dashboard/index'
import { Route as AuthAppPolarSubscriptionsRouteImport } from './routes/_auth/app/polar/subscriptions'
import { Route as AuthAppPolarPortalRouteImport } from './routes/_auth/app/polar/portal'
import { Route as AuthAppDashboardTableRouteImport } from './routes/_auth/app/dashboard/table'
import { Route as AuthAppDashboardSettingsIndexRouteImport } from './routes/_auth/app/dashboard/settings/index'
import { Route as AuthAppDashboardDocsIndexRouteImport } from './routes/_auth/app/dashboard/docs/index'
import { Route as AuthAppPolarCheckoutSuccessRouteImport } from './routes/_auth/app/polar/checkout.success'
import { Route as AuthAppDashboardDocsTutorialRouteImport } from './routes/_auth/app/dashboard/docs/tutorial'

const StaticRouteRoute = StaticRouteRouteImport.update({
  id: '/_static',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTestRoute = ApiTestRouteImport.update({
  id: '/api/test',
  path: '/api/test',
  getParentRoute: () => rootRouteImport,
} as any)
const StaticDocsIndexRoute = StaticDocsIndexRouteImport.update({
  id: '/docs/',
  path: '/docs/',
  getParentRoute: () => StaticRouteRoute,
} as any)
const AuthAppIndexRoute = AuthAppIndexRouteImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)
const StaticDocsNameRoute = StaticDocsNameRouteImport.update({
  id: '/docs/$name',
  path: '/docs/$name',
  getParentRoute: () => StaticRouteRoute,
} as any)
const AuthAppSpecialRoute = AuthAppSpecialRouteImport.update({
  id: '/app/special',
  path: '/app/special',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAppDashboard_oldRoute = AuthAppDashboard_oldRouteImport.update({
  id: '/app/dashboard_old',
  path: '/app/dashboard_old',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAppDashboardRouteRoute = AuthAppDashboardRouteRouteImport.update({
  id: '/app/dashboard',
  path: '/app/dashboard',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAppDashboardIndexRoute = AuthAppDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthAppDashboardRouteRoute,
} as any)
const AuthAppPolarSubscriptionsRoute =
  AuthAppPolarSubscriptionsRouteImport.update({
    id: '/app/polar/subscriptions',
    path: '/app/polar/subscriptions',
    getParentRoute: () => AuthRouteRoute,
  } as any)
const AuthAppPolarPortalRoute = AuthAppPolarPortalRouteImport.update({
  id: '/app/polar/portal',
  path: '/app/polar/portal',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAppDashboardTableRoute = AuthAppDashboardTableRouteImport.update({
  id: '/table',
  path: '/table',
  getParentRoute: () => AuthAppDashboardRouteRoute,
} as any)
const AuthAppDashboardSettingsIndexRoute =
  AuthAppDashboardSettingsIndexRouteImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthAppDashboardRouteRoute,
  } as any)
const AuthAppDashboardDocsIndexRoute =
  AuthAppDashboardDocsIndexRouteImport.update({
    id: '/docs/',
    path: '/docs/',
    getParentRoute: () => AuthAppDashboardRouteRoute,
  } as any)
const AuthAppPolarCheckoutSuccessRoute =
  AuthAppPolarCheckoutSuccessRouteImport.update({
    id: '/app/polar/checkout/success',
    path: '/app/polar/checkout/success',
    getParentRoute: () => AuthRouteRoute,
  } as any)
const AuthAppDashboardDocsTutorialRoute =
  AuthAppDashboardDocsTutorialRouteImport.update({
    id: '/docs/tutorial',
    path: '/docs/tutorial',
    getParentRoute: () => AuthAppDashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/api/test': typeof ApiTestRoute
  '/app/dashboard': typeof AuthAppDashboardRouteRouteWithChildren
  '/app/dashboard_old': typeof AuthAppDashboard_oldRoute
  '/app/special': typeof AuthAppSpecialRoute
  '/docs/$name': typeof StaticDocsNameRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/app': typeof AuthAppIndexRoute
  '/docs': typeof StaticDocsIndexRoute
  '/app/dashboard/table': typeof AuthAppDashboardTableRoute
  '/app/polar/portal': typeof AuthAppPolarPortalRoute
  '/app/polar/subscriptions': typeof AuthAppPolarSubscriptionsRoute
  '/app/dashboard/': typeof AuthAppDashboardIndexRoute
  '/app/dashboard/docs/tutorial': typeof AuthAppDashboardDocsTutorialRoute
  '/app/polar/checkout/success': typeof AuthAppPolarCheckoutSuccessRoute
  '/app/dashboard/docs': typeof AuthAppDashboardDocsIndexRoute
  '/app/dashboard/settings': typeof AuthAppDashboardSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api/test': typeof ApiTestRoute
  '/app/dashboard_old': typeof AuthAppDashboard_oldRoute
  '/app/special': typeof AuthAppSpecialRoute
  '/docs/$name': typeof StaticDocsNameRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/app': typeof AuthAppIndexRoute
  '/docs': typeof StaticDocsIndexRoute
  '/app/dashboard/table': typeof AuthAppDashboardTableRoute
  '/app/polar/portal': typeof AuthAppPolarPortalRoute
  '/app/polar/subscriptions': typeof AuthAppPolarSubscriptionsRoute
  '/app/dashboard': typeof AuthAppDashboardIndexRoute
  '/app/dashboard/docs/tutorial': typeof AuthAppDashboardDocsTutorialRoute
  '/app/polar/checkout/success': typeof AuthAppPolarCheckoutSuccessRoute
  '/app/dashboard/docs': typeof AuthAppDashboardDocsIndexRoute
  '/app/dashboard/settings': typeof AuthAppDashboardSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_static': typeof StaticRouteRouteWithChildren
  '/api/test': typeof ApiTestRoute
  '/_auth/app/dashboard': typeof AuthAppDashboardRouteRouteWithChildren
  '/_auth/app/dashboard_old': typeof AuthAppDashboard_oldRoute
  '/_auth/app/special': typeof AuthAppSpecialRoute
  '/_static/docs/$name': typeof StaticDocsNameRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
  '/_auth/app/': typeof AuthAppIndexRoute
  '/_static/docs/': typeof StaticDocsIndexRoute
  '/_auth/app/dashboard/table': typeof AuthAppDashboardTableRoute
  '/_auth/app/polar/portal': typeof AuthAppPolarPortalRoute
  '/_auth/app/polar/subscriptions': typeof AuthAppPolarSubscriptionsRoute
  '/_auth/app/dashboard/': typeof AuthAppDashboardIndexRoute
  '/_auth/app/dashboard/docs/tutorial': typeof AuthAppDashboardDocsTutorialRoute
  '/_auth/app/polar/checkout/success': typeof AuthAppPolarCheckoutSuccessRoute
  '/_auth/app/dashboard/docs/': typeof AuthAppDashboardDocsIndexRoute
  '/_auth/app/dashboard/settings/': typeof AuthAppDashboardSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/api/test'
    | '/app/dashboard'
    | '/app/dashboard_old'
    | '/app/special'
    | '/docs/$name'
    | '/api/auth/$'
    | '/app'
    | '/docs'
    | '/app/dashboard/table'
    | '/app/polar/portal'
    | '/app/polar/subscriptions'
    | '/app/dashboard/'
    | '/app/dashboard/docs/tutorial'
    | '/app/polar/checkout/success'
    | '/app/dashboard/docs'
    | '/app/dashboard/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api/test'
    | '/app/dashboard_old'
    | '/app/special'
    | '/docs/$name'
    | '/api/auth/$'
    | '/app'
    | '/docs'
    | '/app/dashboard/table'
    | '/app/polar/portal'
    | '/app/polar/subscriptions'
    | '/app/dashboard'
    | '/app/dashboard/docs/tutorial'
    | '/app/polar/checkout/success'
    | '/app/dashboard/docs'
    | '/app/dashboard/settings'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_static'
    | '/api/test'
    | '/_auth/app/dashboard'
    | '/_auth/app/dashboard_old'
    | '/_auth/app/special'
    | '/_static/docs/$name'
    | '/api/auth/$'
    | '/_auth/app/'
    | '/_static/docs/'
    | '/_auth/app/dashboard/table'
    | '/_auth/app/polar/portal'
    | '/_auth/app/polar/subscriptions'
    | '/_auth/app/dashboard/'
    | '/_auth/app/dashboard/docs/tutorial'
    | '/_auth/app/polar/checkout/success'
    | '/_auth/app/dashboard/docs/'
    | '/_auth/app/dashboard/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  StaticRouteRoute: typeof StaticRouteRouteWithChildren
  ApiTestRoute: typeof ApiTestRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_static': {
      id: '/_static'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StaticRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/test': {
      id: '/api/test'
      path: '/api/test'
      fullPath: '/api/test'
      preLoaderRoute: typeof ApiTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_static/docs/': {
      id: '/_static/docs/'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof StaticDocsIndexRouteImport
      parentRoute: typeof StaticRouteRoute
    }
    '/_auth/app/': {
      id: '/_auth/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AuthAppIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_static/docs/$name': {
      id: '/_static/docs/$name'
      path: '/docs/$name'
      fullPath: '/docs/$name'
      preLoaderRoute: typeof StaticDocsNameRouteImport
      parentRoute: typeof StaticRouteRoute
    }
    '/_auth/app/special': {
      id: '/_auth/app/special'
      path: '/app/special'
      fullPath: '/app/special'
      preLoaderRoute: typeof AuthAppSpecialRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/dashboard_old': {
      id: '/_auth/app/dashboard_old'
      path: '/app/dashboard_old'
      fullPath: '/app/dashboard_old'
      preLoaderRoute: typeof AuthAppDashboard_oldRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/dashboard': {
      id: '/_auth/app/dashboard'
      path: '/app/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AuthAppDashboardRouteRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/dashboard/': {
      id: '/_auth/app/dashboard/'
      path: '/'
      fullPath: '/app/dashboard/'
      preLoaderRoute: typeof AuthAppDashboardIndexRouteImport
      parentRoute: typeof AuthAppDashboardRouteRoute
    }
    '/_auth/app/polar/subscriptions': {
      id: '/_auth/app/polar/subscriptions'
      path: '/app/polar/subscriptions'
      fullPath: '/app/polar/subscriptions'
      preLoaderRoute: typeof AuthAppPolarSubscriptionsRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/polar/portal': {
      id: '/_auth/app/polar/portal'
      path: '/app/polar/portal'
      fullPath: '/app/polar/portal'
      preLoaderRoute: typeof AuthAppPolarPortalRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/dashboard/table': {
      id: '/_auth/app/dashboard/table'
      path: '/table'
      fullPath: '/app/dashboard/table'
      preLoaderRoute: typeof AuthAppDashboardTableRouteImport
      parentRoute: typeof AuthAppDashboardRouteRoute
    }
    '/_auth/app/dashboard/settings/': {
      id: '/_auth/app/dashboard/settings/'
      path: '/settings'
      fullPath: '/app/dashboard/settings'
      preLoaderRoute: typeof AuthAppDashboardSettingsIndexRouteImport
      parentRoute: typeof AuthAppDashboardRouteRoute
    }
    '/_auth/app/dashboard/docs/': {
      id: '/_auth/app/dashboard/docs/'
      path: '/docs'
      fullPath: '/app/dashboard/docs'
      preLoaderRoute: typeof AuthAppDashboardDocsIndexRouteImport
      parentRoute: typeof AuthAppDashboardRouteRoute
    }
    '/_auth/app/polar/checkout/success': {
      id: '/_auth/app/polar/checkout/success'
      path: '/app/polar/checkout/success'
      fullPath: '/app/polar/checkout/success'
      preLoaderRoute: typeof AuthAppPolarCheckoutSuccessRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/app/dashboard/docs/tutorial': {
      id: '/_auth/app/dashboard/docs/tutorial'
      path: '/docs/tutorial'
      fullPath: '/app/dashboard/docs/tutorial'
      preLoaderRoute: typeof AuthAppDashboardDocsTutorialRouteImport
      parentRoute: typeof AuthAppDashboardRouteRoute
    }
  }
}

interface AuthAppDashboardRouteRouteChildren {
  AuthAppDashboardTableRoute: typeof AuthAppDashboardTableRoute
  AuthAppDashboardIndexRoute: typeof AuthAppDashboardIndexRoute
  AuthAppDashboardDocsTutorialRoute: typeof AuthAppDashboardDocsTutorialRoute
  AuthAppDashboardDocsIndexRoute: typeof AuthAppDashboardDocsIndexRoute
  AuthAppDashboardSettingsIndexRoute: typeof AuthAppDashboardSettingsIndexRoute
}

const AuthAppDashboardRouteRouteChildren: AuthAppDashboardRouteRouteChildren = {
  AuthAppDashboardTableRoute: AuthAppDashboardTableRoute,
  AuthAppDashboardIndexRoute: AuthAppDashboardIndexRoute,
  AuthAppDashboardDocsTutorialRoute: AuthAppDashboardDocsTutorialRoute,
  AuthAppDashboardDocsIndexRoute: AuthAppDashboardDocsIndexRoute,
  AuthAppDashboardSettingsIndexRoute: AuthAppDashboardSettingsIndexRoute,
}

const AuthAppDashboardRouteRouteWithChildren =
  AuthAppDashboardRouteRoute._addFileChildren(
    AuthAppDashboardRouteRouteChildren,
  )

interface AuthRouteRouteChildren {
  AuthAppDashboardRouteRoute: typeof AuthAppDashboardRouteRouteWithChildren
  AuthAppDashboard_oldRoute: typeof AuthAppDashboard_oldRoute
  AuthAppSpecialRoute: typeof AuthAppSpecialRoute
  AuthAppIndexRoute: typeof AuthAppIndexRoute
  AuthAppPolarPortalRoute: typeof AuthAppPolarPortalRoute
  AuthAppPolarSubscriptionsRoute: typeof AuthAppPolarSubscriptionsRoute
  AuthAppPolarCheckoutSuccessRoute: typeof AuthAppPolarCheckoutSuccessRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthAppDashboardRouteRoute: AuthAppDashboardRouteRouteWithChildren,
  AuthAppDashboard_oldRoute: AuthAppDashboard_oldRoute,
  AuthAppSpecialRoute: AuthAppSpecialRoute,
  AuthAppIndexRoute: AuthAppIndexRoute,
  AuthAppPolarPortalRoute: AuthAppPolarPortalRoute,
  AuthAppPolarSubscriptionsRoute: AuthAppPolarSubscriptionsRoute,
  AuthAppPolarCheckoutSuccessRoute: AuthAppPolarCheckoutSuccessRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface StaticRouteRouteChildren {
  StaticDocsNameRoute: typeof StaticDocsNameRoute
  StaticDocsIndexRoute: typeof StaticDocsIndexRoute
}

const StaticRouteRouteChildren: StaticRouteRouteChildren = {
  StaticDocsNameRoute: StaticDocsNameRoute,
  StaticDocsIndexRoute: StaticDocsIndexRoute,
}

const StaticRouteRouteWithChildren = StaticRouteRoute._addFileChildren(
  StaticRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  StaticRouteRoute: StaticRouteRouteWithChildren,
  ApiTestRoute: ApiTestRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { startInstance } from './start.tsx'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
    config: Awaited<ReturnType<typeof startInstance.getOptions>>
  }
}
